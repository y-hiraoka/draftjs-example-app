{"version":3,"sources":["RichEditorExample/index.tsx","isDraftEditorCommand.ts","App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["styleMap","CODE","backgroundColor","fontFamily","fontSize","padding","getBlockStyle","block","getType","StyleButton","onToggle","active","label","style","className","onMouseDown","e","preventDefault","BLOCK_TYPES","BlockStyleControls","editorState","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","map","type","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","AddLinkControl","onChange","useState","url","setUrl","value","target","onClick","contentStateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","contentStateWithLink","Modifier","applyEntity","newEditorState","EditorState","set","currentContent","RichEditorExample","editor","useRef","handleKeyCommand","useCallback","command","isDraftEditorCommand","newState","RichUtils","mapKeyToEditorCommand","keyCode","onTab","getDefaultKeyBinding","contentState","hasText","getBlockMap","first","toggleBlockType","inlineStyle","toggleInlineStyle","current","focus","blockStyleFn","customStyleMap","keyBindingFn","placeholder","ref","spellCheck","App","createEmpty","decorators","setEditorState","showingDataStructure","setShowingDataStructure","styles","container","data","json","JSON","stringify","convertToRaw","undefined","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getEntity","component","props","getData","href","color","textDecoration","children","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5d7e3b66.chunk.js","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { useCallback, useRef, useState } from \"react\";\nimport {\n  Editor,\n  EditorState,\n  RichUtils,\n  getDefaultKeyBinding,\n  ContentBlock,\n  Modifier,\n} from \"draft-js\";\n\nimport \"./css/example.css\";\nimport \"./css/draft.css\";\nimport \"./css/rich-editor.css\";\nimport { isDraftEditorCommand } from \"../isDraftEditorCommand\";\n\ntype ExampleProps = {\n  editorState: EditorState;\n  onChange: (editorState: EditorState) => void;\n};\n\nconst RichEditorExample: React.VFC<ExampleProps> = ({ editorState, onChange }) => {\n  const editor = useRef<Editor>(null);\n\n  const focus = () => {\n    if (editor.current) editor.current.focus();\n  };\n\n  const handleKeyCommand = useCallback(\n    (command: string, editorState: EditorState) => {\n      if (isDraftEditorCommand(command)) {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n          onChange(newState);\n          return \"handled\";\n        }\n      }\n\n      return \"not-handled\";\n    },\n    [onChange]\n  );\n\n  const mapKeyToEditorCommand = useCallback(\n    (e: React.KeyboardEvent) => {\n      switch (e.keyCode) {\n        case 9: // TAB\n          const newEditorState = RichUtils.onTab(e, editorState, 4 /* maxDepth */);\n          if (newEditorState !== editorState) {\n            onChange(newEditorState);\n          }\n          return null;\n      }\n      return getDefaultKeyBinding(e);\n    },\n    [editorState, onChange]\n  );\n\n  // If the user changes block type before entering any text, we can\n  // either style the placeholder or hide it. Let's just hide it now.\n  let className = \"RichEditor-editor\";\n  const contentState = editorState.getCurrentContent();\n  if (!contentState.hasText()) {\n    if (contentState.getBlockMap().first().getType() !== \"unstyled\") {\n      className += \" RichEditor-hidePlaceholder\";\n    }\n  }\n\n  return (\n    <div className=\"RichEditor-root\">\n      <BlockStyleControls\n        editorState={editorState}\n        onToggle={(blockType) => {\n          const newState = RichUtils.toggleBlockType(editorState, blockType);\n          onChange(newState);\n        }}\n      />\n      <InlineStyleControls\n        editorState={editorState}\n        onToggle={(inlineStyle) => {\n          const newState = RichUtils.toggleInlineStyle(editorState, inlineStyle);\n          onChange(newState);\n        }}\n      />\n      <AddLinkControl editorState={editorState} onChange={onChange} />\n      <div className={className} onClick={focus}>\n        <Editor\n          blockStyleFn={getBlockStyle}\n          customStyleMap={styleMap}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={mapKeyToEditorCommand}\n          onChange={onChange}\n          placeholder=\"Tell a story...\"\n          ref={editor}\n          spellCheck={true}\n        />\n      </div>\n    </div>\n  );\n};\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n  CODE: {\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n};\n\nfunction getBlockStyle(block: ContentBlock) {\n  switch (block.getType()) {\n    case \"blockquote\":\n      return \"RichEditor-blockquote\";\n    default:\n      return \"\";\n  }\n}\n\nconst StyleButton: React.VFC<{\n  onToggle: (value: string) => void;\n  active: boolean;\n  label: string;\n  style: string;\n}> = ({ onToggle, active, label, style }) => {\n  let className = \"RichEditor-styleButton\";\n  if (active) {\n    className += \" RichEditor-activeButton\";\n  }\n\n  return (\n    <span\n      className={className}\n      onMouseDown={(e) => {\n        e.preventDefault();\n        onToggle(style);\n      }}\n    >\n      {label}\n    </span>\n  );\n};\n\nconst BLOCK_TYPES = [\n  { label: \"H1\", style: \"header-one\" },\n  { label: \"H2\", style: \"header-two\" },\n  { label: \"H3\", style: \"header-three\" },\n  { label: \"H4\", style: \"header-four\" },\n  { label: \"H5\", style: \"header-five\" },\n  { label: \"H6\", style: \"header-six\" },\n  { label: \"Blockquote\", style: \"blockquote\" },\n  { label: \"UL\", style: \"unordered-list-item\" },\n  { label: \"OL\", style: \"ordered-list-item\" },\n  { label: \"Code Block\", style: \"code-block\" },\n];\n\nconst BlockStyleControls: React.VFC<{\n  onToggle: (blockType: string) => void;\n  editorState: EditorState;\n}> = ({ editorState, onToggle }) => {\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  return (\n    <div className=\"RichEditor-controls\">\n      {BLOCK_TYPES.map((type) => (\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst INLINE_STYLES = [\n  { label: \"Bold\", style: \"BOLD\" },\n  { label: \"Italic\", style: \"ITALIC\" },\n  { label: \"Underline\", style: \"UNDERLINE\" },\n  { label: \"Monospace\", style: \"CODE\" },\n];\n\nconst InlineStyleControls: React.VFC<{\n  onToggle: (style: string) => void;\n  editorState: EditorState;\n}> = ({ editorState, onToggle }) => {\n  const currentStyle = editorState.getCurrentInlineStyle();\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map((type) => (\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst AddLinkControl: React.VFC<{\n  editorState: EditorState;\n  onChange: (editorState: EditorState) => void;\n}> = ({ editorState, onChange }) => {\n  const [url, setUrl] = useState(\"\");\n\n  const addLink = () => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\"LINK\", \"MUTABLE\", { url });\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const contentStateWithLink = Modifier.applyEntity(\n      contentStateWithEntity,\n      editorState.getSelection(),\n      entityKey\n    );\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithLink,\n    });\n    onChange(newEditorState);\n  };\n\n  return (\n    <div>\n      <input value={url} onChange={(e) => setUrl(e.target.value)} />\n      <button onClick={addLink}>add link</button>\n    </div>\n  );\n};\n\nexport default RichEditorExample;\n","import { DraftEditorCommand } from \"draft-js\";\n\nexport function isDraftEditorCommand(command: string): command is DraftEditorCommand {\n  return (\n    command === \"undo\" ||\n    command === \"redo\" ||\n    command === \"delete\" ||\n    command === \"delete-word\" ||\n    command === \"backspace\" ||\n    command === \"backspace-word\" ||\n    command === \"backspace-to-start-of-line\" ||\n    command === \"bold\" ||\n    command === \"code\" ||\n    command === \"italic\" ||\n    command === \"strikethrough\" ||\n    command === \"underline\" ||\n    command === \"split-block\" ||\n    command === \"transpose-characters\" ||\n    command === \"move-selection-to-start-of-block\" ||\n    command === \"move-selection-to-end-of-block\" ||\n    command === \"secondary-cut\" ||\n    command === \"secondary-paste\"\n  );\n}\n","import { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport { CompositeDecorator, ContentState, convertToRaw, DraftDecorator, EditorState } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nimport RichEditorExample from \"./RichEditorExample\";\n\nfunction App() {\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty(decorators));\n\n  const [showingDataStructure, setShowingDataStructure] = useState<\n    \"Raw\" | \"EditorState\" | \"ContentState\"\n  >(\"Raw\");\n\n  return (\n    <div className={styles.container}>\n      <div>\n        <RichEditorExample editorState={editorState} onChange={setEditorState} />\n      </div>\n      <div className={styles.data}>\n        <div>\n          <button onClick={() => setShowingDataStructure(\"Raw\")}>raw</button>\n          <button onClick={() => setShowingDataStructure(\"EditorState\")}>\n            EditorState\n          </button>\n          <button onClick={() => setShowingDataStructure(\"ContentState\")}>\n            ContentState\n          </button>\n        </div>\n        <pre className={styles.json}>\n          {showingDataStructure === \"Raw\"\n            ? JSON.stringify(convertToRaw(editorState.getCurrentContent()), null, 2)\n            : showingDataStructure === \"EditorState\"\n            ? JSON.stringify(editorState, null, 2)\n            : showingDataStructure === \"ContentState\"\n            ? JSON.stringify(editorState.getCurrentContent(), null, 2)\n            : undefined}\n        </pre>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\ntype DecoratorComponentProps = {\n  blockKey: string;\n  contentState: ContentState;\n  decoratedText: string;\n  dir?: \"ltr\" | \"rtl\";\n  end: number;\n  entityKey?: string;\n  offsetKey: string;\n  start: number;\n};\nconst LinkEntityComponent: React.FC<DecoratorComponentProps> = (props) => {\n  const { url } = props.contentState.getEntity(props.entityKey ?? \"\").getData();\n  return (\n    <a href={url} style={{ color: \"#3b5998\", textDecoration: \"underline\" }}>\n      {props.children}\n    </a>\n  );\n};\n\nconst linkStrategy: DraftDecorator[\"strategy\"] = (\n  contentBlock,\n  callback,\n  contentState\n) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    return entityKey !== null && contentState.getEntity(entityKey).getType() === \"LINK\";\n  }, callback);\n};\n\nconst decorators = new CompositeDecorator([\n  {\n    strategy: linkStrategy,\n    component: LinkEntityComponent,\n  },\n]);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"data\":\"App_data__3KBx8\",\"json\":\"App_json__30j6l\"};"],"sourceRoot":""}